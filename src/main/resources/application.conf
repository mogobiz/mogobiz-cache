# Please refer to the minimal configuration to understand the meaning of all properties.
# Starting from the minimal configuration, some information have been extracted.
# First of all, the different server has been extracted, thus we can referenced them in the different input/output properties
# In this file, two chained jobs have been created as well. One for the api and one for jahia.
# This allows a separated run for each of them.
# The same result could be done by launching the application with two configuration file.
# Furthermore, most of the URI start the same way. This data has been extracted to a property, which can be referenced.
# All optional properties are filled in this file.
mogobiz.cache {
  timeout:30
  server {
    es {
      protocol: "http"
      host: "elastic.ebiznext.com"
      port: 80
      maxClient: 10
      searchguard : {
        active: false
        username: "username"
        password: "password"
      }
    },
    api {
      protocol: "https"
      host: "mogobiz.ebiznext.com"
      port: 443
      maxClient: 10
    },
    front {
      protocol: "https"
      host: "mogobiz.ebiznext.com"
      port: 443
      maxClient: 10
    }
  },
  uri {
    generic {
      apiStore: ""
      frontStore: ""
      apiPrefix: ""
      frontPrefix: ""
      process: [
        {
          input: {
            index: ${mogobiz.cache.uri.generic.apiStore}
            type: "product"
            fields: ["id"]
            encodeFields: true
            scroll: "5m"
            size: 100
            server: ${mogobiz.cache.server.es}
          },
          output: {
            uri: ${mogobiz.cache.uri.generic.apiPrefix}"/"${mogobiz.cache.uri.generic.apiStore}"/products/{0}"
            server: ${mogobiz.cache.server.api}
          }
        },
        {
          input: {
            index: ${mogobiz.cache.uri.generic.apiStore}
            type: "brand"
            fields: ["id"]
            encodeFields: true
            scroll: "5m"
            size: 100
            server: ${mogobiz.cache.server.es}
          },
          output: {
            uri: ${mogobiz.cache.uri.generic.apiPrefix}"/"${mogobiz.cache.uri.generic.apiStore}"/brands?brandId={0}"
            server: ${mogobiz.cache.server.api}
          }
        },
        {
          input: {
            index: ${mogobiz.cache.uri.generic.apiStore}
            type: "category"
            fields: "path"
            encodeFields: true,
            scroll: "5m"
            size: 100
            server: ${mogobiz.cache.server.es}
          },
          output: {
            uri: ${mogobiz.cache.uri.generic.apiPrefix}"/"${mogobiz.cache.uri.generic.apiStore}"/categories?categoryPath={0}"
            server: ${mogobiz.cache.server.api}
          }
        },
        {
          input: {
            index: ${mogobiz.cache.uri.generic.apiStore}
            type: "category"
            fields: ["parentId"]
            encodeFields: true
            scroll: "5m"
            size: 100
            server: ${mogobiz.cache.server.es}
          },
          output: {
            uri: ${mogobiz.cache.uri.generic.apiPrefix}"/"${mogobiz.cache.uri.generic.apiStore}"/categories?parentId={0}"
            server: ${mogobiz.cache.server.api}
          }
        },
        {
          input: {
            index: ${mogobiz.cache.uri.generic.apiStore}
            type: "product"
            fields: ["id"]
            encodeFields: true
            scroll: "5m"
            size: 100
            server: ${mogobiz.cache.server.es}
          },
          output: {
            uri: ${mogobiz.cache.uri.generic.frontPrefix}"/"${mogobiz.cache.uri.generic.frontStore}"/products/{0}.html"
            server: ${mogobiz.cache.server.front}
          }
        },
        {
          input: {
            index: ${mogobiz.cache.uri.generic.apiStore}
            type: "brand"
            fields: ["name"]
            encodeFields: true
            scroll: "5m"
            size: 100
            server: ${mogobiz.cache.server.es}
          },
          output: {
            uri: ${mogobiz.cache.uri.generic.frontPrefix}"/"${mogobiz.cache.uri.generic.frontStore}"/brands/{0}.html"
            server: ${mogobiz.cache.server.front}
          }
        },
        {
          input: {
            index: ${mogobiz.cache.uri.generic.apiStore}
            type: "category"
            fields: "path"
            encodeFields: [false]
            scroll: "5m"
            size: 100
            server: ${mogobiz.cache.server.es}
          },
          output: {
            uri: ${mogobiz.cache.uri.generic.frontPrefix}"/"${mogobiz.cache.uri.generic.frontStore}"/categories/{0}.html"
            server: ${mogobiz.cache.server.front}
          }
        }
      ]
      purge: {
        uri: "{0}",
        method: "PURGE"
        server: ${mogobiz.cache.server.front}
      }
    }
  }
}
